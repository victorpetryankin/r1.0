#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Проводит документ по учетам. Если в параметре ВидыУчетов передано Неопределено, то документ проводится по всем учетам.
// Процедура вызывается из обработки проведения и может вызываться из вне.
// 
// Параметры:
//  ДокументСсылка	- ДокументСсылка.КомпенсацияЗаЗадержкуЗарплаты - Ссылка на документ.
//  РежимПроведения - РежимПроведенияДокумента - Режим проведения документа (оперативный, неоперативный).
//  Отказ 			- Булево - Признак отказа от выполнения проведения.
//  ВидыУчетов 		- Строка - Список видов учета, по которым необходимо провести документ. 
//                             Если параметр пустой или Неопределено, то документ проведется по всем учетам.
//  Движения 		- КоллекцияДвижений, Структура - Коллекция наборов записей движений документа.
//
Процедура ПровестиПоУчетам(ДокументСсылка, РежимПроведения, Отказ, ВидыУчетов = Неопределено, Движения = Неопределено) Экспорт
	
	СтруктураВидовУчета = ПроведениеРасширенныйСервер.СтруктураВидовУчета();
	ПроведениеРасширенныйСервер.ПодготовитьНаборыЗаписейКРегистрацииДвиженийПоВидамУчета(РежимПроведения, ДокументСсылка, СтруктураВидовУчета, ВидыУчетов, Движения, , Отказ); 
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();	
	ДокументОбъект.ЗаполнитьДвиженияПоУчетам(Движения, Отказ, СтруктураВидовУчета);

	ПроведениеРасширенныйСервер.ЗаписьДвиженийПоУчетам(Движения, СтруктураВидовУчета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.КомпенсацияЗаЗадержкуЗарплаты;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьСостав() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Ищем документы с пустой ТЧ Состав
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Номер КАК Номер
	|ИЗ
	|	Документ.КомпенсацияЗаЗадержкуЗарплаты КАК Документ
	|ГДЕ
	|	НЕ 1 В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					1 КАК Поле1
	|				ИЗ
	|					Документ.КомпенсацияЗаЗадержкуЗарплаты.Состав КАК Состав
	|				ГДЕ
	|					Состав.Ссылка = Документ.Ссылка)
	|	И 1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1 КАК Поле1
	|			ИЗ
	|				Документ.КомпенсацияЗаЗадержкуЗарплаты.Начисления КАК Начисления
	|			ГДЕ
	|				Начисления.Ссылка = Документ.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НАЧАЛОПЕРИОДА(Документ.Дата, ГОД),
	|	Документ.Номер";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			
			Для Каждого СтрокаНачислений Из Документ.Начисления Цикл
				
				СтрокаСостава = Документ.Состав.Найти(СтрокаНачислений.Сотрудник, "Сотрудник");
				
				Если СтрокаСостава = Неопределено Тогда
					СтрокаСостава = Документ.Состав.Добавить();
					СтрокаСостава.Сотрудник = СтрокаНачислений.Сотрудник;
				КонецЕсли;	
				
			КонецЦикла;
			
			Документ.ОбменДанными.Загрузка = Истина;
			Документ.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаполнитьПериодВзаиморасчетов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КомпенсацияЗаЗадержкуЗарплаты.Ссылка
	|ИЗ
	|	Документ.КомпенсацияЗаЗадержкуЗарплаты КАК КомпенсацияЗаЗадержкуЗарплаты
	|ГДЕ
	|	КомпенсацияЗаЗадержкуЗарплаты.ПериодВзаиморасчетов = ДАТАВРЕМЯ(1, 1, 1)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Документ = Выборка.Ссылка.ПолучитьОбъект();
		
		Документ.ПериодВзаиморасчетов = Документ.ПериодРегистрации;
		
		Документ.ОбменДанными.Загрузка = Истина;
		Документ.Записать();
		
	КонецЦикла
	
КонецПроцедуры

Процедура ЗаполнитьПорядокВыплаты() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КомпенсацияЗаЗадержкуЗарплаты.Ссылка
	|ИЗ
	|	Документ.КомпенсацияЗаЗадержкуЗарплаты КАК КомпенсацияЗаЗадержкуЗарплаты
	|ГДЕ
	|	КомпенсацияЗаЗадержкуЗарплаты.ПорядокВыплаты = ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.ПустаяСсылка)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Документ = Выборка.Ссылка.ПолучитьОбъект();		
		Документ.ОбменДанными.Загрузка = Истина;
		Документ.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		Документ.ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата;
		
		Документ.Записать();
		
	КонецЦикла;
		
	
КонецПроцедуры

Процедура ЗаполнитьСуммаПоДокументу() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КомпенсацияЗаЗадержкуЗарплатыНачисления.Ссылка КАК Ссылка,
	|	СУММА(КомпенсацияЗаЗадержкуЗарплатыНачисления.СуммаКомпенсации) КАК СуммаПоДокументу
	|ИЗ
	|	Документ.КомпенсацияЗаЗадержкуЗарплаты.Начисления КАК КомпенсацияЗаЗадержкуЗарплатыНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсацияЗаЗадержкуЗарплатыНачисления.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(КомпенсацияЗаЗадержкуЗарплатыНачисления.СуммаКомпенсации) <> КомпенсацияЗаЗадержкуЗарплатыНачисления.Ссылка.СуммаПоДокументу";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Документ = Выборка.Ссылка.ПолучитьОбъект();		
		Документ.ОбменДанными.Загрузка = Истина;
		Документ.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
		Документ.СуммаПоДокументу = Выборка.СуммаПоДокументу;
		
		Документ.Записать();
		
	КонецЦикла;
		
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
